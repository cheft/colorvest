// Generated by CoffeeScript 1.4.0
(function() {

  define(['underscore', 'jquery', 'coala/coala', 'coala/core/config', 'coala/vendors/jquery/select2/select2'], function(_, $, coala, config) {
    var callback;
    callback = function(q, view, textKey) {
      var d, data, _i, _len;
      data = view.collection.toJSON();
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        if (!d.text) {
          d.text = d[textKey];
        }
      }
      return q.callback({
        results: data,
        more: false
      });
    };
    return coala.registerComponentHandler('select', (function() {}), function(el, opt, view) {
      var e, events, id, options, selector, textKey, _i, _len;
      if (opt.readOnly === true) {
        return {
          loadData: function(data) {
            return _(opt.data).each(function(item) {
              if (String(item.id) === String(data[opt.fieldName])) {
                return el.html(item.text);
              }
            });
          }
        };
      }
      options = _.extend({
        minimumResultsForSearch: config.minimumResultsForSearch
      }, opt);
      if (options.remote === true) {
        delete options.remote;
        options.data = [];
        textKey = options.textKey || 'name';
        options.query = function(q) {
          if (view.collection.isEmpty()) {
            return $.when(view.collection.fetch()).done(function() {
              return callback(q, view, textKey);
            });
          } else {
            return _.delay((function() {
              return callback(q, view, textKey);
            }), 50);
          }
        };
      }
      selector = el.select2(options);
      id = el.attr('id').split('-');
      id.shift();
      id = id.join('-');
      events = ['change'];
      for (_i = 0, _len = events.length; _i < _len; _i++) {
        e = events[_i];
        selector.on(e, view.feature.delegateComponentEvent(view, {
          component: selector
        }, "select:" + id + ":" + e));
      }
      return selector;
    });
  });

}).call(this);
