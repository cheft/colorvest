// Generated by CoffeeScript 1.4.0
(function() {

  define(["coala/core/view", "underscore"], function(View, _) {
    return {
      showPicker: function() {
        var app, gridOptions, options, root, targetGrid;
        options = this.feature.startupOptions;
        gridOptions = void 0;
        targetGrid = this.components[0];
        app = this.feature.module.getApplication();
        root = app.applicationRoot;
        if (!this.dialogView) {
          gridOptions = _.extend(options.pickerGrid || {}, {
            type: "grid",
            selector: "grid"
          });
          this.dialogView = new View({
            baseName: "grid-picker-grid-view",
            feature: this.feature,
            module: this.module,
            model: options.url,
            components: [gridOptions],
            avoidLoadingHandlers: true
          });
        }
        return root.showDialog({
          title: options.title,
          view: this.dialogView,
          buttons: [
            {
              label: "OK",
              fn: _.bind(function(me) {
                var exists, grid, rowData, selected;
                grid = me.dialogView.components[0];
                selected = grid.getGridParam("selrow");
                rowData = void 0;
                if (!selected) {
                  return false;
                }
                rowData = grid.getRowData(selected);
                exists = targetGrid.getRowData(selected);
                if (_.include(targetGrid.getDataIDs(), rowData.id)) {
                  return false;
                }
                targetGrid.addRowData(rowData.id, rowData);
                if (options.statusChanger) {
                  options.valueField.trigger('change');
                }
                return true;
              }, this, this)
            }
          ]
        });
      },
      removeItem: function() {
        var gridOptions, options, selected, targetGrid;
        options = this.feature.startupOptions;
        gridOptions = void 0;
        targetGrid = this.components[0];
        selected = targetGrid.getGridParam("selrow");
        if (!selected) {
          return;
        }
        return targetGrid.delRowData(selected);
      }
    };
  });

}).call(this);
